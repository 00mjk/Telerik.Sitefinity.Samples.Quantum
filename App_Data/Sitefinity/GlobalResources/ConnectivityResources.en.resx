<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectivityResourcesTitle" lastModified="2014-04-07T14:32:44">
    <value>ConnectivityResources labels</value>
    <comment>The title of this class.</comment>
  </data>
  <data name="ConnectivityResourcesTitlePlural" lastModified="2014-04-07T14:32:44">
    <value>ConnectivityResources labels</value>
    <comment>The plural title of this class.</comment>
  </data>
  <data name="ConnectivityResourcesDescription" lastModified="2014-04-07T14:32:44">
    <value>Contains shared localizable resources for all connectors.</value>
    <comment>Contains shared localizable resources for all connectors.</comment>
  </data>
  <data name="LogicalOperatorPropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Logical operator</value>
    <comment>Phrase: Logical operator</comment>
  </data>
  <data name="LogicalOperatorPropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>Determines the logical operator that will be applied for all logical groups and filter conditions. Allowed values: 'AND', 'OR'</value>
    <comment>Phrase: Determines the logical operator that will be applied for  all logical groups and filter conditions. Allowed values: 'AND', 'OR' </comment>
  </data>
  <data name="LogicalGroupsPropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Logical groups</value>
    <comment>Phrase: Logical groups</comment>
  </data>
  <data name="LogicalGroupsPropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>Container for other logical groups</value>
    <comment>Phrase: Container for other logical groups</comment>
  </data>
  <data name="FilterConditionsPropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Filter conditions</value>
    <comment>Phrase: Filter conditions</comment>
  </data>
  <data name="FilterConditionsPropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>Container for fields with desired values that build the actual filter</value>
    <comment>Phrase: Container for fields with desired values that build the actual filter</comment>
  </data>
  <data name="ComparisonOperatorPropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Comparison operator</value>
    <comment>Phrase: Comparison operator</comment>
  </data>
  <data name="ComparisonOperatorPropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>Operator for comparing a field with its value.</value>
    <comment>Phrase: Operator for comparing a field with its value.</comment>
  </data>
  <data name="FieldNamePropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Field name</value>
    <comment>Phrase: Field name</comment>
  </data>
  <data name="FieldNamePropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>A field that the filter will be based upon</value>
    <comment>Phrase: A field that the filter will be based upon</comment>
  </data>
  <data name="FieldValuePropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Field value</value>
    <comment>Phrase: Field value</comment>
  </data>
  <data name="FieldValuePropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>A value that will be used to filter items</value>
    <comment>Phrase: A value that will be used to filter items</comment>
  </data>
  <data name="FieldDefaultValuePropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>A value that will be set to the filter property of a new synchronized item so it will match the filter for later synchronizations</value>
    <comment>Phrase: A value that will be set to the filter property of a new synchronized item so it will match the filter for later synchronizations</comment>
  </data>
  <data name="FieldTypeFullNamePropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Field type full name</value>
    <comment>Phrase: Field type full name</comment>
  </data>
  <data name="FieldTypeFullNamePropNameDescription" lastModified="2014-04-07T14:32:44">
    <value>The full name of the field's type</value>
    <comment>Phrase: The full name of the field's type</comment>
  </data>
  <data name="FieldDefaultValuePropNameCaption" lastModified="2014-04-07T14:32:44">
    <value>Default filter field value</value>
    <comment>Phrase: Default filter field value</comment>
  </data>
</root>