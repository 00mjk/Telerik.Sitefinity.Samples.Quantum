<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataResourcesTitle" lastModified="2014-04-07T14:32:44">
    <value>Data</value>
    <comment>The title of this class.</comment>
  </data>
  <data name="DataResourcesTitlePlural" lastModified="2014-04-07T14:32:44">
    <value>Data</value>
    <comment>The title plural of this class.</comment>
  </data>
  <data name="DataResourcesDescription" lastModified="2014-04-07T14:32:44">
    <value>Contains localizable resources for the UI and messages of data related work.</value>
    <comment>The description of this class.</comment>
  </data>
  <data name="MissingProviderDecorator" lastModified="2014-04-07T14:32:44">
    <value>No data provider decorator could be found for the provider '{0}'. The method '{1}' has to be overridden and implemented.</value>
    <comment>The error message displayed when decorator is missing for a data provider.</comment>
  </data>
  <data name="UrlResolverDescription" lastModified="2014-04-07T14:32:44">
    <value>Determines and compiles the most appropriate URL for a locatable item for the current request.</value>
    <comment>The description of the URL resolver.</comment>
  </data>
  <data name="AuthorResolverDescription" lastModified="2014-04-07T14:32:44">
    <value>Retrieves and constructs the author name based on the information provided by the data item.</value>
    <comment>The description of the Author resolver.</comment>
  </data>
  <data name="DateEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Evaluates a date in the URL that is in the following format: YYYY/MM/DD</value>
    <comment>The description of the Date URL Evaluator.</comment>
  </data>
  <data name="PageNumberEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Evaluates a page number in the URL. The default format is: /Page/4/</value>
    <comment>The description of the Page-number URL Evaluator.</comment>
  </data>
  <data name="DepartmentPageNumberEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Evaluates a page number and department in the URL. The default format is: /-in-Department/Departments/animals/Page/4/</value>
    <comment>The description of the Page-number and Department URL Evaluator.</comment>
  </data>
  <data name="ItemsPerPageEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Evaluates the items per page in the URL. The default format is: /Show/4/</value>
    <comment>The description of the Items-per-page URL Evaluator.</comment>
  </data>
  <data name="AuthorEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Extracts the username form the URL string. Always the first segment in the URL is assumed.</value>
    <comment>The description of the Author URL Evaluator.</comment>
  </data>
  <data name="TaxonomyEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Extracts the taxonomy and taxon form the URL string. Assumed that it starts after marked segment at url till the end. E.g. /-in-/Category/Cat1/Cat2, where '-in-' is marker for start of Taxonomy evaluator, first segment after marker is taxonomy and next segments contain full URL of taxon.</value>
    <comment>The description of the Taxonomy URL Evaluator.</comment>
  </data>
  <data name="PagerEvaluatorDescription" lastModified="2014-04-07T14:32:44">
    <value>Extracts the current page number and the items per page in the url. The format is /page/2/show/3. The parameters can be used separately (E.g /show/2 or /page/3). Does not support the format /show/2/page/3.</value>
    <comment>The description of the Pager URL Evaluator.</comment>
  </data>
</root>